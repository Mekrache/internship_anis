# Dockerfile.flexric.ubuntu18.04
# Valid for UBUNTU 18.04

FROM ubuntu:18.04 AS flexric-build
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Europe/Paris



RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get upgrade -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        build-essential \
        psmisc \
        net-tools\
        git \
        gpg \
        wget \
        curl\
        libsctp-dev \
        python3.8 \
        python3-dev \
        python3-pip \
        autotools-dev \
        automake \
        libpcre2-dev \
        flex \
        ninja-build \
        # Bison 3.5 dependencies
        gettext \
        libtool-bin \
        autoconf

# Install CMake 3.15
RUN wget -O cmake.sh https://github.com/Kitware/CMake/releases/download/v3.15.5/cmake-3.15.5-Linux-x86_64.sh && \
    sh ./cmake.sh --prefix=/usr/local --skip-license

# Download Bison 3.5 source code directly
RUN wget https://ftp.gnu.org/gnu/bison/bison-3.5.tar.gz && \
    tar -xvf bison-3.5.tar.gz && \
    cd bison-3.5 && \
    ./configure --prefix=/usr && \
    make && \
    make install

# Continue with the rest of the build steps for FlexRAN...
RUN apt-get install -y curl

# Continue with the rest of the build steps for FlexRAN...

# Rest of the Dockerfile
RUN git clone https://github.com/swig/swig.git && \
    cd swig && \
    ./autogen.sh && \
    ./configure --prefix=/usr/ && \
    make && \
    make install

RUN git clone https://github.com/Anis16/flexric.git && \
    cd flexric &&  \
    mkdir build && \
    cd build && \
    cmake .. && \
    make && \
    make install 

# Continue with the rest of the Dockerfile for the target image...

# Target Image
FROM ubuntu:18.04 AS oai-flexric
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Europe/Paris

# Install necessary runtime packages and libraries
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get upgrade -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        psmisc \
        gpg \
        wget \
        libsctp-dev \
        python3.8 \
        python3-pip && \
        apt-get autoremove -y && \
        pip3 install pika

WORKDIR /usr/lib/x86_64-linux-gnu/


# Copy necessary files from the flexric-build image
COPY --from=flexric-build \
    /usr/lib/x86_64-linux-gnu/libsctp.so.1 \
    /lib/x86_64-linux-gnu/libdl.so.2 \
    /lib/x86_64-linux-gnu/libpthread.so.0 \
    /lib/x86_64-linux-gnu/libc.so.6 \
    /lib64/ld-linux-x86-64.so.2 \
    /usr/local/lib/

COPY --from=flexric-build \
    /usr/local/lib/flexric/libmac_sm.so \
    /usr/local/lib/flexric/libkpm_sm.so \
    /usr/local/lib/flexric/librlc_sm.so \
    /usr/local/lib/flexric/libslice_sm.so \
    /usr/local/lib/flexric/libtc_sm.so \
    /usr/local/lib/flexric/libgtp_sm.so \
    /usr/local/lib/flexric/

WORKDIR /flexric/build/examples/xApp/python3/

COPY config.ini rnisxapp.py /flexric/build/examples/xApp/python3/
COPY flexric.conf        /usr/local/etc/flexric/

COPY entrypoint.sh /entrypoint.sh

RUN chmod +x /entrypoint.sh



COPY --from=flexric-build \
    /flexric/build/src/xApp/libe42_xapp_shared.so \
    /flexric/build/src/xApp/

COPY --from=flexric-build \
    /flexric/build/examples/xApp/python3/ .

COPY --from=flexric-build \
    /flexric/build/examples/ric/nearRT-RIC /usr/local/bin/nearRT-RIC

EXPOSE 36421/sctp
EXPOSE 36422/sctp

